generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  salons    Salon[]
}

model Salon {
  id          Int         @id @default(autoincrement())
  name        String      // <-- this is the salon name
  business    Business    @relation(fields: [businessId], references: [id])
  businessId  Int
  salonType   SalonType   @relation(fields: [salonTypeId], references: [id])
  salonTypeId Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?
  services    SalonService[]
  address     String?
  city        String?
  zipCode     String?
  country     String?
  deals       Deal[]

  @@index([businessId])
  @@index([salonTypeId])
  @@index([createdAt])
}

model SalonType {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  salons Salon[]
}

model Service {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  salons SalonService[]
}

model SalonService {
  id        Int     @id @default(autoincrement())
  salon     Salon   @relation(fields: [salonId], references: [id])
  salonId   Int
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int

  @@unique([salonId, serviceId])
}

model Deal {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Decimal  
  quantity    Int
  expiryDate  DateTime
  salon       Salon    @relation(fields: [salonId], references: [id])
  salonId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  durationMinutes Int 
  @@index([salonId])
  @@index([expiryDate])
  @@index([createdAt])
}

model WaitingList {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
}